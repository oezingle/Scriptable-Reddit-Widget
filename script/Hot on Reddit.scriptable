{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "orange",
    "glyph" : "fire"
  },
  "name" : "Hot on Reddit",
  "script" : "\/\/subreddit photos by Oezingle\n\/\/Version 1.4.0\n\n\/* Acceptable Subreddit value examples\n\"nocontextpics\"\n\"r\/itookapicture\"\n\"u\/egnogra\"\n*\/\n\nSubreddits = [\n\"VaporwaveAesthetics\",\n\"VaporwaveArt\",\n\"futureporn\",\n\"u\/egnogra\",\n\"u\/stfeyes\",\n\"u\/MaxHayArt\",\n\"neoncities\",\n\"NeonSigns\",\n\"outrun\",\n\"u\/__pratham__\",\n\"u\/TsujSynthmane\",\n]\n\nBanned = [\n\"SaimanSays\",\n\"dankmemes\",\n\"Memes_Of_The_Dank\",\n\"meme\",\n\"memes\",\n]\n\nSHOW_TITLE = true\nSHOW_SUBREDDIT = true\n\nSHOW_POINTS = true\nSHOW_USERNAME = true\n\nREFRESH_IN_MINUTES = 5 \nBLOCK_NSFW = true\n\n\/*\nChangelog\n1.5.0\nAdded a documentation website, and moved to github. watch this space\n\n1.4.0\nreplaced the upvote suffixes with lowercase versions\nlinks are now checked for image extensions\nBLOCK_NSFW added. self explanitory\n\n1.3.1\nREFRESH_IN_MINUTES sets how many minutes it will be until the widget reloads\nPosts made by admins that have been stickied are automatically removed. These are often subreddit guides, and are uninsteresting\n\n1.3.0\nSHOW_SUBREDDIT now shows the sub instead of user, if a user is the chosen subreddit\nthe Banned variable can be set to users or subs you don't want to see posts from\n\n1.2.0\nSwitched to old.reddit.com (faster)\nAdded text shadows for better visibility\nerror message shown when no photos found\nwidget parameters:  \n  - : replace Subreddit list (must be the first parameter)\n  , : next Subreddit\n  eg: \"-, memes\" will show only content from r\/memes\n  \n1.1.1\nusers' feeds can be added!\nfixed multi-image posting\nmore correct post selection\n*\/\n\n\/\/TODO: Broken cross-posted videos (??)\n\/\/TODO: higher likelyhood of top post being used\n\/\/(random(100))^(1\/2)\n\nvar version = \"1.5.0\"\n\nif (!Script.runsInWidget) {\n  \/\/TODO: ping google or something \n  var web = await new Request(\"https:\/\/raw.githubusercontent.com\/oezingle\/Scriptable-Reddit-Widget\/main\/docs\/web.html\").loadString()\n  \n  web = web.replace(\"SCRIPT_VERSION\",version)\n  \n  WebView.loadHTML(web, null)\n} else {\n\n\/\/boolean file type check\nfunction is_image(url) {  \n  var file_types = [\n\".gif\",\".png\",\".jpeg\",\".jpg\",\".tiff\",\".webp\",\".bmp\",\".raw\"]  \n  \n  for (var q in file_types) {\n    if (url.includes(file_types[q])) {\n      return false\n    }\n  }\n  \n  return true\n}\n\n\/\/get subreddits from the ones specified in the parameter\nvar parameters = args.widgetParameter\nif (parameters != null) {  \n  parameters = parameters.replace(\" \",\",\").replace(\",,\",\",\").replace(\",,\",\",\").split(\",\");  \n\n  \/\/ check for a \"-\" or one single letter parameter\n  if (parameters.length == 1 && parameters[0].length == 1) {\n    \/\/ we assume this means there's a random char to keep the widget looking random\n  } else {\n    \/\/this is actually parameters being used  \n    if (parameters[0] == \"-\") {\n      parameters.splice(0,1)\n      Subreddits = parameters\n    } else {\n      Subreddits = Subreddits.concat(parameters)  \n    }\n  }\n}\n\nvar sub = Subreddits[Math.floor(Math.random() * Subreddits.length)]\n\nif (! sub.includes(\"\/\")) {\n  sub = \"r\/\" + sub\n}\n\nvar url\nvar sub_is_user = sub.includes(\"u\/\")\n\nif (sub_is_user) {\n  url = \"https:\/\/old.reddit.com\/\" + sub + \"\/submitted\/.json?count=100\"\n} else {  \n  url = \"https:\/\/old.reddit.com\/\" + sub + \"\/hot\/.json?count=10\"  \n}\n\njson = await new Request(url).loadJSON()\njson = json.data.children\n\n\/\/remove the things with bad tags:\n\/\/ videos, text\nfor (var i = json.length - 1; i >= 0; i--) {\n  var data = json[i].data\n  \n  if (\n    data.is_self ||\n    data.media != null ||   \n    data.url.includes(\"gallery\") ||   \n    Banned.includes(data.subreddit) || \n    Banned.includes(\"u\/\"+data.author) ||\n    ( data.distinguished != false && data.stickied) ||  \n    is_image(data.url) ||\n    (data.over_18 && BLOCK_NSFW)\n  ) {\n    console.warn(data.title)\n    json.splice(i, 1)  \n  } else {\n    console.log(data.title)\n  }\n}\n\nvar image\ntry {   \n  data = json[Math.floor(Math.random()*json.length)\n].data\n  \n  console.log(\"\")  \n  console.log(data.title)  \n  \/\/ data.title  \n  \/\/ data.score  \n  \/\/ data.author  \n  \/\/ data.url  \n  \/\/     \n  \/\/console.log(data)\n\n  image = await new Request(data.url).loadImage()\n} catch {\n  console.log(data)\n  \n  var dc = new DrawContext()\n  dc.drawText(\"Something has gone wrong\", new Point(10,90))  \n  image = dc.getImage()\n}\n\nwidget = new ListWidget()\nwidget.backgroundImage = image\n\n\/\/TODO: open in the app automagically\n\/\/ reddit.app.link ?\nwidget.url = \"https:\/\/www.reddit.com\" + data.permalink\n\n\/*\"https:\/\/www.reddit.com\/r\/teenagers\/comments\/ktwrzu\/hello_im_back_ive_been_unbanned\/?utm_source=share&utm_medium=ios_app&utm_name=iossmf\"*\/\n\n\/\/ add title &\/or uploader, points, subreddit\nconst top = widget.addStack()\n    top.layoutHorizontally()\n    top.centerAlignContent()\n    top.spacing = 3\n\nif (SHOW_TITLE) {\n  addText(top, data.title)\n}\n\ntop.addSpacer()\n\nif (SHOW_SUBREDDIT) {\n  addText(top, data.subreddit_name_prefixed)\n}\n\nwidget.addSpacer()\n\nconst bottom = widget.addStack()\n    bottom.layoutHorizontally()\n    bottom.centerAlignContent()\n    bottom.spacing = 3\n    \n    if (SHOW_POINTS) {\n      addSymbol(bottom, \"arrow.up.square.fill\")\n      addText(bottom,\nString(abbreviateNumber(data.score,0))  \n      )\n      addSymbol(bottom, \"arrow.down.square.fill\")\n    }\n    \n    bottom.addSpacer()\n    \n    if (SHOW_USERNAME) {\n      addText(bottom, `u\/${data.author}`)\n    }\n\n\/\/refresh every 5 mins\nvar refreshDate = Date.now() + 60*1000*REFRESH_IN_MINUTES\nwidget.refreshAfterDate = new Date(refreshDate)\n\nScript.setWidget(widget)\n}\nScript.complete()\n\n\n\/\/ functions stolen from the instagram post script.\n\nfunction addText(container, text) {\n  const txt = container.addText(text)\n  txt.font = Font.systemFont(12)\n  txt.textColor = Color.white()\n  txt.shadowRadius = 3\n  txt.shadowColor = Color.darkGray()\n}\nfunction addSymbol(container, name) {\n  const sfIcon = SFSymbol.named(name)\n  const fIcon = sfIcon.image\n  const icon = container.addImage(fIcon)\n  icon.tintColor = Color.white()\n  icon.imageSize = new Size(12,12)\n  return icon\n}\n\n\n\/\/ found on : https:\/\/stackoverflow.com\/a\/32638472\n\/\/ thanks @D.Deriso\nfunction abbreviateNumber(num, fixed) {\n  \n  if (num === null) { return null; } \/\/ terminate early\n  if (num === 0) { return '0'; } \/\/ terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; \/\/ number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), \/\/ get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) \/ 3), \/\/ floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num \/ Math.pow(10, k * 3) ).toFixed(1 + fixed), \/\/ divide by power\n      d = c < 0 ? c : Math.abs(c), \/\/ enforce -0 is 0\n      e = d + ['', 'k', 'm', 'b', 't'][k]; \/\/ append power\n  return e;\n}",
  "share_sheet_inputs" : [

  ]
}